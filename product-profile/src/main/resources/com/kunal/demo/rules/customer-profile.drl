package com.kunal.demo.rules;
dialect "java"

import java.util.Date;
import java.util.Calendar;
import com.kunal.demo.rules.model.Customer;

function boolean checkIfAdult(Date dob){
	return checkIfOlderThan(dob, 18);
}

function boolean checkIfYoungerThan(Date dob, int age){
	Calendar calendar = Calendar.getInstance();
	calendar.add(Calendar.YEAR, -age);
	Date minDateForAnAdult = calendar.getTime();
	System.out.println("Is the customer older than [" + dob + "]? " + dob.after(minDateForAnAdult));
	return dob.after(minDateForAnAdult);
}

function boolean checkIfOlderThan(Date dob, int age){
	Calendar calendar = Calendar.getInstance();
	calendar.add(Calendar.YEAR, -age);
	Date minDateForAnAdult = calendar.getTime();
	System.out.println("Is the customer older than [" + dob + "]? " + dob.before(minDateForAnAdult));
	return dob.before(minDateForAnAdult);
}

function int getAge(Date dob){
	Calendar now = Calendar.getInstance();
	Calendar _dob = Calendar.getInstance();
	_dob.setTime(dob);
	//TODO: logic to calculate age needs to improve to include month and day as well
	return ( now.get(Calendar.YEAR) - _dob.get(Calendar.YEAR) );
}

declare CustomerProfile
	customer				:	Customer
	age					:	int
	affordabilityConcern	:	String
	coverAmount			:	long
end

rule "create profile for the customer"
no-loop
when
	// When a customer exists
	$c : Customer()
then
	CustomerProfile customerProfile = new CustomerProfile($c, getAge($c.getDob()), "High");
	System.out.println($c);
	update ($c);
	insert (customerProfile);
end

rule "Is the customer an adult?"
when
	$customerProfile : CustomerProfile( age > 18)
then
	System.out.println($customerProfile.getCustomer().getName() + " is an adult");
end
