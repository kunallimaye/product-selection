package com.kunal.demo.rules;
dialect "java"

import java.util.Date;
import java.util.Calendar;
import com.kunal.demo.rules.model.Customer;
import com.kunal.demo.rules.model.CustomerProfile;
import com.kunal.demo.rules.model.AffordabilityConcernType;
import com.kunal.demo.rules.model.EmploymentDurationType;

function boolean checkIfAdult(Date dob){
	return checkIfOlderThan(dob, 18);
}

function boolean checkIfYoungerThan(Date dob, int age){
	Calendar calendar = Calendar.getInstance();
	calendar.add(Calendar.YEAR, -age);
	Date minDateForAnAdult = calendar.getTime();
	System.out.println("Is the customer older than [" + dob + "]? " + dob.after(minDateForAnAdult));
	return dob.after(minDateForAnAdult);
}

function boolean checkIfOlderThan(Date dob, int age){
	Calendar calendar = Calendar.getInstance();
	calendar.add(Calendar.YEAR, -age);
	Date minDateForAnAdult = calendar.getTime();
	System.out.println("Is the customer older than [" + dob + "]? " + dob.before(minDateForAnAdult));
	return dob.before(minDateForAnAdult);
}

function int getAge(Date dob){
	Calendar now = Calendar.getInstance();
	Calendar _dob = Calendar.getInstance();
	_dob.setTime(dob);
	//TODO: logic to calculate age needs to improve to include month and day as well
	return ( now.get(Calendar.YEAR) - _dob.get(Calendar.YEAR) );
}

rule "create profile for the customer"
when
	// When a customer exists
	$c : Customer()
then
	CustomerProfile customerProfile = new CustomerProfile();
	customerProfile.setCustomer($c);
	customerProfile.setAge(getAge($c.getDob()));
	//System.out.println($c);
	//update ($c);
	insert (customerProfile);
end

rule "Row 1 affordability-concern-rule"
    dialect "mvel"
    when
        customerProfile : CustomerProfile( age >= ( 18 ) )
    then
       modify( customerProfile ) {
                setAffordabilityConcern( AffordabilityConcernType.HIGH )
        }
        System.out.println("\n\tCustomer profile: " + customerProfile.toString());
end


rule "Row 2 affordability-concern-rule"
    dialect "mvel"
    when
        customerProfile : CustomerProfile( age >= ( 30 ) )
    then
        modify( customerProfile ) {
                setAffordabilityConcern( AffordabilityConcernType.LOW )
        }
        System.out.println("\n\tCustomer profile: " + customerProfile.toString());
end


rule "Row 3 affordability-concern-rule"
    dialect "mvel"
    when
        customerProfile : CustomerProfile( age >= ( 50 ) )
    then
        modify( customerProfile ) {
                setAffordabilityConcern( AffordabilityConcernType.MEDIUM )
        }
        System.out.println("\n\tCustomer profile: " + customerProfile.toString());
end


rule "Row 4 affordability-concern-rule"
    dialect "mvel"
    when
        customerProfile : CustomerProfile( age >= ( 60 ) )
    then
        modify( customerProfile ) {
                setAffordabilityConcern( AffordabilityConcernType.HIGH )
        }
        System.out.println("\n\tCustomer profile: " + customerProfile.toString());
end

rule "Is the customer an adult?"
when
	$customerProfile : CustomerProfile( age < 18)
then
	System.out.println("\n\t" + $customerProfile.getCustomer().getName() + " is not an adult");
	System.out.println("\n\t" + $customerProfile.toString());
end
